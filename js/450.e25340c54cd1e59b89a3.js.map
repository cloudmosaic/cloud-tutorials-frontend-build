{"version":3,"sources":["webpack://cloud-tutorials-frontend/./src/App.scss","webpack://cloud-tutorials-frontend/./src/store/index.js","webpack://cloud-tutorials-frontend/./src/Routes.js","webpack://cloud-tutorials-frontend/./src/App.js","webpack://cloud-tutorials-frontend/./src/AppEntry.js","webpack://cloud-tutorials-frontend/./src/bootstrap.js","webpack://cloud-tutorials-frontend/./src/App.scss?c4c9"],"names":["___CSS_LOADER_EXPORT___","push","module","id","init","middleware","getRegistry","promiseMiddleware","notificationsMiddleware","errorDescriptionKey","SamplePage","lazy","OopsPage","NoPermissionsPage","Routes","Suspense","fallback","Bullseye","Spinner","path","paths","component","to","propTypes","childProps","PropTypes","history","App","props","useEffect","register","notifications","notificationsReducer","insights","chrome","identifyApp","on","event","navId","Fragment","withRouter","connect","AppEntry","logger","store","getStore","basename","getBaseName","window","location","pathname","root","document","getElementById","ReactDOM","setAttribute","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"kMAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,kEAAmE,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,4BAA4B,MAAQ,GAAG,SAAW,kCAAkC,eAAiB,CAAC,mEAAmE,WAAa,MAE7T,W,gICDO,SAASC,IAAoB,2BAAZC,EAAY,yBAAZA,EAAY,gBAMlC,OALWC,QAAY,GAAD,CACpBC,MACAC,QAAwB,CAAEC,oBAAqB,CAAC,SAAU,YAFtC,OAGjBJ,I,8GCHDK,GAAaC,WAAK,kBACtB,kEAEIC,GAAWD,WAAK,kBACpB,0EAEIE,GAAoBF,WAAK,kBAC7B,2EAaWG,EAAS,kBACpB,gBAAC,EAAAC,SAAD,CACEC,SACE,gBAAC,EAAAC,SAAD,KACE,gBAAC,EAAAC,QAAD,QAIJ,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAOC,KAAMC,QAAkBC,UAAWX,IAC1C,gBAAC,KAAD,CAAOS,KAAMC,QAAYC,UAAWT,IACpC,gBAAC,KAAD,CAAOO,KAAMC,QAAqBC,UAAWR,IAE7C,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAUS,GAAIF,cAMtBN,EAAOS,UAAY,CACjBC,WAAYC,UAAgB,CAC1BC,QAASD,UAAgB,CACvBxB,KAAMwB,c,gCCvCNE,EAAM,SAACC,GAaX,OAZAC,gBAAU,WAOR,OANiBvB,UACRwB,SAAS,CAAEC,cAAeC,OACnCC,SAASC,OAAO9B,OAGhB6B,SAASC,OAAOC,YAAY,UACrBF,SAASC,OAAOE,GAAG,kBAAkB,SAACC,GAAD,O,UACrCT,MAAMF,QAAQzB,KAAnB,WAA4BoC,EAAMC,aAEnC,IAGD,gBAAC,EAAAC,SAAD,KACE,gBAAC,KAAD,MACA,gBAACzB,EAAD,CAAQU,WAAYI,MAK1BD,EAAIJ,UAAY,CACdG,QAASD,YAQX,SAAee,SAAWC,UAAUd,I,cCjC9Be,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACf,gBAAC,KAAD,CAAUC,OAAQD,EAASvC,EAAKuC,GAAUvC,KAAQyC,YAChD,gBAAC,KAAD,CAAQC,UAAUC,QAAYC,OAAOC,SAASC,WAC5C,gBAAC,EAAD,SAKNR,EAASnB,UAAY,CACnBoB,OAAQlB,UAGV,UChBA,IAAM0B,EAAOC,SAASC,eAAe,QAErCC,SAAgB,gBAAC,EAAD,MAAcH,GAAM,kBAClCA,EAAKI,aAAa,kBAAkB,O,6DCClCC,EAAS,IAAI,UALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAK,kBAAkBtD,EAAOuD,IAAIC,WAAY,CAC5C,IA+BIC,EAAY,iBAEhBzD,EAAOuD,IAAIG,OACT,MACA,cAnCkB,SAAuBC,EAAGC,EAAGC,GACnD,IAAKF,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIE,EAEJ,IAAKA,KAAKH,EACR,GAKIA,EAAEG,KAAOF,EAAEE,GACb,OAAO,EAIX,IAAKA,KAAKF,EACR,IAKKD,EAAEG,GACL,OAAO,EAIX,OAAO,EAOIC,CAAcN,EAAW,mBAMxBA,EAAY,iBAEZH,EAAO,YAPLtD,EAAOuD,IAAIC,gBAYzBxD,EAAOuD,IAAIS,SAAQ,WACjBV,OAIW","file":"js/450.e25340c54cd1e59b89a3.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--ins-color--orange: #ec7a08}button:focus{outline:none}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.scss\"],\"names\":[],\"mappings\":\"AAAA,MAAM,4BAA4B,CAAC,aAAa,YAAY\",\"sourcesContent\":[\":root{--ins-color--orange: #ec7a08}button:focus{outline:none}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport React, { Suspense, lazy } from 'react';\nimport { routes as paths } from '../package.json';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst SamplePage = lazy(() =>\n  import(/* webpackChunkName: \"SamplePage\" */ './Routes/SamplePage/SamplePage')\n);\nconst OopsPage = lazy(() =>\n  import(/* webpackChunkName: \"OopsPage\" */ './Routes/OopsPage/OopsPage')\n);\nconst NoPermissionsPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"NoPermissionsPage\" */ './Routes/NoPermissionsPage/NoPermissionsPage'\n  )\n);\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      <Route path={paths.samplePage} component={SamplePage} />\n      <Route path={paths.oops} component={OopsPage} />\n      <Route path={paths.noPermissions} component={NoPermissionsPage} />\n      {/* Finally, catch all unmatched routes */}\n      <Route>\n        <Redirect to={paths.samplePage} />\n      </Route>\n    </Switch>\n  </Suspense>\n);\n\nRoutes.propTypes = {\n  childProps: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }),\n  }),\n};\n","import PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport './App.scss';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst App = (props) => {\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n    insights.chrome.init();\n\n    // TODO change this to your appname\n    insights.chrome.identifyApp('mosaic');\n    return insights.chrome.on('APP_NAVIGATION', (event) =>\n      this.props.history.push(`/${event.navId}`)\n    );\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes childProps={props} />\n    </Fragment>\n  );\n};\n\nApp.propTypes = {\n  history: PropTypes.object,\n};\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter(connect()(App));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\nconst AppEntry = ({ logger }) => (\n  <Provider store={(logger ? init(logger) : init()).getStore()}>\n    <Router basename={getBaseName(window.location.pathname)}>\n      <App />\n    </Router>\n  </Provider>\n);\n\nAppEntry.propTypes = {\n  logger: PropTypes.func,\n};\n\nexport default AppEntry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppEntry from './AppEntry';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<AppEntry />, root, () =>\n  root.setAttribute('data-ouia-safe', true)\n);\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components-config/src/css-prefix-loader.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components-config/src/css-prefix-loader.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}